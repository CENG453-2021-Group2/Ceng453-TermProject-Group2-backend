memberSearchIndex = [{"p":"group2.monopoly.auth.controller","c":"AuthController","l":"AuthController(UserDetailsService, JwtHelper, AuthenticationManager, UserService, UserPasswordResetService)","u":"%3Cinit%3E(org.springframework.security.core.userdetails.UserDetailsService,group2.monopoly.security.jwt.JwtHelper,org.springframework.security.authentication.AuthenticationManager,group2.monopoly.auth.service.UserService,group2.monopoly.auth.service.UserPasswordResetService)"},{"p":"group2.monopoly.auth.controller","c":"AuthControllerIntegrationTest","l":"AuthControllerIntegrationTest()","u":"%3Cinit%3E()"},{"p":"group2.monopoly.auth.controller","c":"AuthController","l":"authenticateUser(LoginDto)","u":"authenticateUser(group2.monopoly.auth.payload.LoginDto)"},{"p":"group2.monopoly.security","c":"SecurityConfig","l":"authenticationManagerBean()"},{"p":"group2.monopoly.handlers","c":"AuthExceptionHandler","l":"AuthExceptionHandler()","u":"%3Cinit%3E()"},{"p":"group2.monopoly.auth","c":"AuthTestSuite","l":"AuthTestSuite()","u":"%3Cinit%3E()"},{"p":"group2.monopoly.auth.exception","c":"BasicAuthException","l":"BasicAuthException(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"group2.monopoly.game.service","c":"ScoreboardService","l":"bestOfAllTimes()"},{"p":"group2.monopoly.game.service","c":"ScoreboardService","l":"bestOfLastWeek()"},{"p":"group2.monopoly.game.service.engine","c":"GameEngineService","l":"canBuy(Player, Game, Integer)","u":"canBuy(group2.monopoly.game.entity.Player,group2.monopoly.game.entity.Game,java.lang.Integer)"},{"p":"group2.monopoly.game.service.engine","c":"IGameEngine","l":"canBuy(Player, Game, Integer)","u":"canBuy(group2.monopoly.game.entity.Player,group2.monopoly.game.entity.Game,java.lang.Integer)"},{"p":"group2.monopoly.game.service.manager","c":"CellSequence","l":"CellSequence()","u":"%3Cinit%3E()"},{"p":"group2.monopoly.game.service","c":"GameScoreService","l":"computeScore(GameTableConfiguration, List<Integer>, Integer)","u":"computeScore(group2.monopoly.game.entity.GameTableConfiguration,java.util.List,java.lang.Integer)"},{"p":"group2.monopoly.security","c":"SecurityConfig","l":"configure(AuthenticationManagerBuilder)","u":"configure(org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder)"},{"p":"group2.monopoly.security","c":"SecurityConfig","l":"configure(HttpSecurity)","u":"configure(org.springframework.security.config.annotation.web.builders.HttpSecurity)"},{"p":"group2.monopoly.game.controller","c":"GameController","l":"createGame(GameCreateDTO, Authentication)","u":"createGame(group2.monopoly.game.payload.GameCreateDTO,org.springframework.security.core.Authentication)"},{"p":"group2.monopoly.game.service.manager","c":"GameManagerService","l":"createGame(User, String)","u":"createGame(group2.monopoly.auth.entity.User,java.lang.String)"},{"p":"group2.monopoly.security.jwt","c":"JwtHelper","l":"createJwtForClaims(String, Map<String, String>)","u":"createJwtForClaims(java.lang.String,java.util.Map)"},{"p":"group2.monopoly.auth.service","c":"UserService","l":"createSuperUser(String, String, String)","u":"createSuperUser(java.lang.String,java.lang.String,java.lang.String)"},{"p":"group2.monopoly.auth.service","c":"UserService","l":"createUser(SignUpDto)","u":"createUser(group2.monopoly.auth.payload.SignUpDto)"},{"p":"group2.monopoly.auth.service","c":"UserService","l":"createUser(String, String, String)","u":"createUser(java.lang.String,java.lang.String,java.lang.String)"},{"p":"group2.monopoly.security","c":"CustomUserDetailsService","l":"CustomUserDetailsService(UserRepository)","u":"%3Cinit%3E(group2.monopoly.auth.repository.UserRepository)"},{"p":"group2.monopoly.game.service.AiPlayerRunner","c":"DumbAiPlayerRunnerService","l":"decideToBuy(Integer, Integer)","u":"decideToBuy(java.lang.Integer,java.lang.Integer)"},{"p":"group2.monopoly.game.service.AiPlayerRunner","c":"IAiPlayerRunner","l":"decideToBuy(Integer, Integer)","u":"decideToBuy(java.lang.Integer,java.lang.Integer)"},{"p":"group2.monopoly.auth.repository","c":"UserPasswordResetRepository","l":"deleteAllByUser(User)","u":"deleteAllByUser(group2.monopoly.auth.entity.User)"},{"p":"group2.monopoly.game.controller","c":"GameController","l":"deleteGame(Long, Authentication)","u":"deleteGame(java.lang.Long,org.springframework.security.core.Authentication)"},{"p":"group2.monopoly.game.service.manager","c":"GameManagerService","l":"deleteGame(User, Game)","u":"deleteGame(group2.monopoly.auth.entity.User,group2.monopoly.game.entity.Game)"},{"p":"group2.monopoly.game.service.AiPlayerRunner","c":"DumbAiPlayerRunnerService","l":"DumbAiPlayerRunnerService()","u":"%3Cinit%3E()"},{"p":"group2.monopoly.mail","c":"EmailServiceImpl","l":"EmailServiceImpl()","u":"%3Cinit%3E()"},{"p":"group2.monopoly.auth.entity","c":"User","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"group2.monopoly.auth.entity","c":"UserPasswordReset","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"group2.monopoly.game.entity","c":"Game","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"group2.monopoly.game.entity","c":"Player","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"group2.monopoly.payload","c":"GenericResponse","l":"error(String)","u":"error(java.lang.String)"},{"p":"group2.monopoly.auth.repository","c":"UserRepository","l":"existsByEmail(String)","u":"existsByEmail(java.lang.String)"},{"p":"group2.monopoly.game.repository","c":"GameRepository","l":"existsByName(String)","u":"existsByName(java.lang.String)"},{"p":"group2.monopoly.auth.repository","c":"UserRepository","l":"existsByUsername(String)","u":"existsByUsername(java.lang.String)"},{"p":"group2.monopoly.game.service.engine","c":"FileDiceGenerator","l":"FileDiceGenerator(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"group2.monopoly.game.repository","c":"PlayerRepository","l":"findAllByGameNotNull(Date, Date)","u":"findAllByGameNotNull(java.util.Date,java.util.Date)"},{"p":"group2.monopoly.game.repository","c":"PlayerRepository","l":"findAllByGameOrderByTurnOrder(Game)","u":"findAllByGameOrderByTurnOrder(group2.monopoly.game.entity.Game)"},{"p":"group2.monopoly.game.repository","c":"GameRepository","l":"findAllByOwnerAndCompletionDateIsNotNull(User)","u":"findAllByOwnerAndCompletionDateIsNotNull(group2.monopoly.auth.entity.User)"},{"p":"group2.monopoly.auth.repository","c":"UserRepository","l":"findByEmail(String)","u":"findByEmail(java.lang.String)"},{"p":"group2.monopoly.auth.repository","c":"UserRepository","l":"findById(Long)","u":"findById(java.lang.Long)"},{"p":"group2.monopoly.auth.repository","c":"UserRepository","l":"findByUsername(String)","u":"findByUsername(java.lang.String)"},{"p":"group2.monopoly.game.repository","c":"GameRepository","l":"findFinishedGamesBy(User)","u":"findFinishedGamesBy(group2.monopoly.auth.entity.User)"},{"p":"group2.monopoly.auth.repository","c":"UserPasswordResetRepository","l":"findFirstByUserOrderByValidUntilDesc(User)","u":"findFirstByUserOrderByValidUntilDesc(group2.monopoly.auth.entity.User)"},{"p":"group2.monopoly.game.repository","c":"GameRepository","l":"findGamesByUser(User)","u":"findGamesByUser(group2.monopoly.auth.entity.User)"},{"p":"group2.monopoly.game.repository","c":"GameRepository","l":"findUnfinishedGamesByUser(User)","u":"findUnfinishedGamesByUser(group2.monopoly.auth.entity.User)"},{"p":"group2.monopoly.auth.repository","c":"UserRepository","l":"findUserByUsername(String)","u":"findUserByUsername(java.lang.String)"},{"p":"group2.monopoly.auth.repository","c":"UserPasswordResetRepository","l":"findUserPasswordResetByTokenEquals(UUID)","u":"findUserPasswordResetByTokenEquals(java.util.UUID)"},{"p":"group2.monopoly.auth.controller","c":"AuthController","l":"forgotPassword(JsonNode)","u":"forgotPassword(com.fasterxml.jackson.databind.JsonNode)"},{"p":"group2.monopoly.game.entity","c":"Game","l":"Game()","u":"%3Cinit%3E()"},{"p":"group2.monopoly.game.service.engine","c":"GameCellPriceService","l":"GameCellPriceService()","u":"%3Cinit%3E()"},{"p":"group2.monopoly.game.controller","c":"GameController","l":"GameController(UserService, GameManagerService, IGameEngine, IAiPlayerRunner, IGameCellPrice)","u":"%3Cinit%3E(group2.monopoly.auth.service.UserService,group2.monopoly.game.service.manager.GameManagerService,group2.monopoly.game.service.engine.IGameEngine,group2.monopoly.game.service.AiPlayerRunner.IAiPlayerRunner,group2.monopoly.game.service.engine.IGameCellPrice)"},{"p":"group2.monopoly.game.payload","c":"GameCreateDTO","l":"GameCreateDTO()","u":"%3Cinit%3E()"},{"p":"group2.monopoly.game.service.engine","c":"GameEngineService","l":"GameEngineService(PlayerRepository, GameRepository, GameCellPriceService, IDiceGenerator, GameScoreService)","u":"%3Cinit%3E(group2.monopoly.game.repository.PlayerRepository,group2.monopoly.game.repository.GameRepository,group2.monopoly.game.service.engine.GameCellPriceService,group2.monopoly.game.service.engine.IDiceGenerator,group2.monopoly.game.service.GameScoreService)"},{"p":"group2.monopoly.handlers","c":"GameExceptionHandler","l":"GameExceptionHandler()","u":"%3Cinit%3E()"},{"p":"group2.monopoly.game.exception","c":"GameFaultyMoveException","l":"GameFaultyMoveException(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"group2.monopoly.game.payload","c":"GameInteractionDTO","l":"GameInteractionDTO()","u":"%3Cinit%3E()"},{"p":"group2.monopoly.game.exception","c":"GameManagementException","l":"GameManagementException(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"group2.monopoly.game.service.manager","c":"GameManagerService","l":"GameManagerService(ICellSequenceGenerator, GameRepository, PlayerRepository)","u":"%3Cinit%3E(group2.monopoly.game.service.manager.ICellSequenceGenerator,group2.monopoly.game.repository.GameRepository,group2.monopoly.game.repository.PlayerRepository)"},{"p":"group2.monopoly.game.exception","c":"GameOverException","l":"GameOverException(Player, Game)","u":"%3Cinit%3E(group2.monopoly.game.entity.Player,group2.monopoly.game.entity.Game)"},{"p":"group2.monopoly.game.service","c":"GameScoreService","l":"GameScoreService(IGameCellPrice)","u":"%3Cinit%3E(group2.monopoly.game.service.engine.IGameCellPrice)"},{"p":"group2.monopoly.game.entity","c":"GameTableConfiguration","l":"GameTableConfiguration()","u":"%3Cinit%3E()"},{"p":"group2.monopoly.game.service.manager","c":"ICellSequenceGenerator","l":"generateCellSequence()"},{"p":"group2.monopoly.game.service.manager","c":"RandomCellSequenceGeneratorService","l":"generateCellSequence()"},{"p":"group2.monopoly.auth.service","c":"UserPasswordResetService","l":"generateNewToken(String)","u":"generateNewToken(java.lang.String)"},{"p":"group2.monopoly.auth.service","c":"UserPasswordResetService","l":"generateNewToken(User)","u":"generateNewToken(group2.monopoly.auth.entity.User)"},{"p":"group2.monopoly.auth.service","c":"UserPasswordResetService","l":"generateNewToken(User, Date, UUID)","u":"generateNewToken(group2.monopoly.auth.entity.User,java.util.Date,java.util.UUID)"},{"p":"group2.monopoly.payload","c":"GenericResponse","l":"GenericResponse()","u":"%3Cinit%3E()"},{"p":"group2.monopoly.auth.entity","c":"User","l":"getAuthorities()"},{"p":"group2.monopoly.game.controller","c":"GameController","l":"getAvailableGames(Authentication)","u":"getAvailableGames(org.springframework.security.core.Authentication)"},{"p":"group2.monopoly.game.service.manager","c":"GameManagerService","l":"getAvailableGames(User)","u":"getAvailableGames(group2.monopoly.auth.entity.User)"},{"p":"group2.monopoly.game.service.engine","c":"GameCellPriceService","l":"getCellPrice(GameTableConfiguration, Integer)","u":"getCellPrice(group2.monopoly.game.entity.GameTableConfiguration,java.lang.Integer)"},{"p":"group2.monopoly.game.service.engine","c":"IGameCellPrice","l":"getCellPrice(GameTableConfiguration, Integer)","u":"getCellPrice(group2.monopoly.game.entity.GameTableConfiguration,java.lang.Integer)"},{"p":"group2.monopoly.game.controller","c":"GameController","l":"getGame(Long, Authentication)","u":"getGame(java.lang.Long,org.springframework.security.core.Authentication)"},{"p":"group2.monopoly.game.service.manager","c":"GameManagerService","l":"getGame(User, Long)","u":"getGame(group2.monopoly.auth.entity.User,java.lang.Long)"},{"p":"group2.monopoly.game.service.engine","c":"GameCellPriceService","l":"getIncomeTax()"},{"p":"group2.monopoly.game.service.engine","c":"IGameCellPrice","l":"getIncomeTax()"},{"p":"group2.monopoly.mapper","c":"ObjectMapperSingleton","l":"getMapper()"},{"p":"group2.monopoly.game.service.engine","c":"GameCellPriceService","l":"getPortPrice(GameTableConfiguration, Integer)","u":"getPortPrice(group2.monopoly.game.entity.GameTableConfiguration,java.lang.Integer)"},{"p":"group2.monopoly.game.service.engine","c":"IGameCellPrice","l":"getPortPrice(GameTableConfiguration, Integer)","u":"getPortPrice(group2.monopoly.game.entity.GameTableConfiguration,java.lang.Integer)"},{"p":"group2.monopoly.game.service.engine","c":"GameCellPriceService","l":"getPortRent(GameTableConfiguration, Integer, Integer)","u":"getPortRent(group2.monopoly.game.entity.GameTableConfiguration,java.lang.Integer,java.lang.Integer)"},{"p":"group2.monopoly.game.service.engine","c":"IGameCellPrice","l":"getPortRent(GameTableConfiguration, Integer, Integer)","u":"getPortRent(group2.monopoly.game.entity.GameTableConfiguration,java.lang.Integer,java.lang.Integer)"},{"p":"group2.monopoly.game.service.engine","c":"GameCellPriceService","l":"getPropertyPrice(GameTableConfiguration, Integer)","u":"getPropertyPrice(group2.monopoly.game.entity.GameTableConfiguration,java.lang.Integer)"},{"p":"group2.monopoly.game.service.engine","c":"IGameCellPrice","l":"getPropertyPrice(GameTableConfiguration, Integer)","u":"getPropertyPrice(group2.monopoly.game.entity.GameTableConfiguration,java.lang.Integer)"},{"p":"group2.monopoly.game.service.engine","c":"GameCellPriceService","l":"getPropertyRent(GameTableConfiguration, Integer)","u":"getPropertyRent(group2.monopoly.game.entity.GameTableConfiguration,java.lang.Integer)"},{"p":"group2.monopoly.game.service.engine","c":"IGameCellPrice","l":"getPropertyRent(GameTableConfiguration, Integer)","u":"getPropertyRent(group2.monopoly.game.entity.GameTableConfiguration,java.lang.Integer)"},{"p":"group2.monopoly.game.service.engine","c":"GameCellPriceService","l":"getSalary()"},{"p":"group2.monopoly.game.service.engine","c":"IGameCellPrice","l":"getSalary()"},{"p":"group2.monopoly.auth.controller","c":"AuthController","l":"getUserSettings(Authentication)","u":"getUserSettings(org.springframework.security.core.Authentication)"},{"p":"group2.monopoly.auth.validator","c":"ValidPassword","l":"groups()"},{"p":"group2.monopoly.auth.validator","c":"ValidPasswordResetRequestDTO","l":"groups()"},{"p":"group2.monopoly.auth.validator","c":"ValidUsername","l":"groups()"},{"p":"group2.monopoly.auth.validator","c":"ValidUuid","l":"groups()"},{"p":"group2.monopoly.handlers","c":"AuthExceptionHandler","l":"handleAccessDeniedException(Exception, WebRequest)","u":"handleAccessDeniedException(java.lang.Exception,org.springframework.web.context.request.WebRequest)"},{"p":"group2.monopoly.handlers","c":"AuthExceptionHandler","l":"handleBasicAuthException(Exception, WebRequest)","u":"handleBasicAuthException(java.lang.Exception,org.springframework.web.context.request.WebRequest)"},{"p":"group2.monopoly.handlers","c":"GameExceptionHandler","l":"handleGameFaultyMoveException(GameFaultyMoveException, WebRequest)","u":"handleGameFaultyMoveException(group2.monopoly.game.exception.GameFaultyMoveException,org.springframework.web.context.request.WebRequest)"},{"p":"group2.monopoly.handlers","c":"GameExceptionHandler","l":"handleGameOverException(GameOverException, WebRequest)","u":"handleGameOverException(group2.monopoly.game.exception.GameOverException,org.springframework.web.context.request.WebRequest)"},{"p":"group2.monopoly.handlers","c":"RestResponseEntityExceptionHandler","l":"handleMethodArgumentNotValid(MethodArgumentNotValidException, HttpHeaders, HttpStatus, WebRequest)","u":"handleMethodArgumentNotValid(org.springframework.web.bind.MethodArgumentNotValidException,org.springframework.http.HttpHeaders,org.springframework.http.HttpStatus,org.springframework.web.context.request.WebRequest)"},{"p":"group2.monopoly.auth.entity","c":"User","l":"hashCode()"},{"p":"group2.monopoly.auth.entity","c":"UserPasswordReset","l":"hashCode()"},{"p":"group2.monopoly.game.entity","c":"Game","l":"hashCode()"},{"p":"group2.monopoly.game.entity","c":"Player","l":"hashCode()"},{"p":"group2.monopoly.auth.validator","c":"PasswordConstraintValidator","l":"initialize(ValidPassword)","u":"initialize(group2.monopoly.auth.validator.ValidPassword)"},{"p":"group2.monopoly.auth.validator","c":"PasswordResetRequestDTOValidator","l":"initialize(ValidPasswordResetRequestDTO)","u":"initialize(group2.monopoly.auth.validator.ValidPasswordResetRequestDTO)"},{"p":"group2.monopoly.auth.validator","c":"UsernameConstraintValidator","l":"initialize(ValidUsername)","u":"initialize(group2.monopoly.auth.validator.ValidUsername)"},{"p":"group2.monopoly.auth.validator","c":"UuidValidator","l":"initialize(ValidUuid)","u":"initialize(group2.monopoly.auth.validator.ValidUuid)"},{"p":"group2.monopoly.game.controller","c":"GameController","l":"interactWithGame(Long, GameInteractionDTO, Authentication)","u":"interactWithGame(java.lang.Long,group2.monopoly.game.payload.GameInteractionDTO,org.springframework.security.core.Authentication)"},{"p":"group2.monopoly.auth.entity","c":"User","l":"isAccountNonExpired()"},{"p":"group2.monopoly.auth.entity","c":"User","l":"isAccountNonLocked()"},{"p":"group2.monopoly.auth.entity","c":"User","l":"isCredentialsNonExpired()"},{"p":"group2.monopoly.auth.entity","c":"User","l":"isEnabled()"},{"p":"group2.monopoly.auth.validator","c":"PasswordResetRequestDTOValidator","l":"isValid(PasswordResetRequestDTO, ConstraintValidatorContext)","u":"isValid(group2.monopoly.auth.payload.PasswordResetRequestDTO,javax.validation.ConstraintValidatorContext)"},{"p":"group2.monopoly.auth.validator","c":"PasswordConstraintValidator","l":"isValid(String, ConstraintValidatorContext)","u":"isValid(java.lang.String,javax.validation.ConstraintValidatorContext)"},{"p":"group2.monopoly.auth.validator","c":"UsernameConstraintValidator","l":"isValid(String, ConstraintValidatorContext)","u":"isValid(java.lang.String,javax.validation.ConstraintValidatorContext)"},{"p":"group2.monopoly.auth.validator","c":"UuidValidator","l":"isValid(String, ConstraintValidatorContext)","u":"isValid(java.lang.String,javax.validation.ConstraintValidatorContext)"},{"p":"group2.monopoly.security.jwt","c":"JwtConfiguration","l":"JwtConfiguration()","u":"%3Cinit%3E()"},{"p":"group2.monopoly.security.jwt","c":"JwtConfiguration","l":"jwtDecoder(RSAPublicKey)","u":"jwtDecoder(java.security.interfaces.RSAPublicKey)"},{"p":"group2.monopoly.security.jwt","c":"JwtHelper","l":"JwtHelper(RSAPrivateKey, RSAPublicKey)","u":"%3Cinit%3E(java.security.interfaces.RSAPrivateKey,java.security.interfaces.RSAPublicKey)"},{"p":"group2.monopoly.security.jwt","c":"JwtConfiguration","l":"jwtSigningKey(KeyStore)","u":"jwtSigningKey(java.security.KeyStore)"},{"p":"group2.monopoly.security.jwt","c":"JwtConfiguration","l":"jwtValidationKey(KeyStore)","u":"jwtValidationKey(java.security.KeyStore)"},{"p":"group2.monopoly.security.jwt","c":"JwtConfiguration","l":"keyStore()"},{"p":"group2.monopoly.security","c":"CustomUserDetailsService","l":"loadUserByUsername(String)","u":"loadUserByUsername(java.lang.String)"},{"p":"group2.monopoly.auth.payload","c":"LoginDto","l":"LoginDto()","u":"%3Cinit%3E()"},{"p":"group2.monopoly","c":"MonopolyApplication","l":"main(String[])","u":"main(java.lang.String[])"},{"p":"group2.monopoly.handlers","c":"AuthExceptionHandler","l":"mapper"},{"p":"group2.monopoly.handlers","c":"GameExceptionHandler","l":"mapper"},{"p":"group2.monopoly.handlers","c":"RestResponseEntityExceptionHandler","l":"mapper"},{"p":"group2.monopoly.auth.validator","c":"ValidPassword","l":"message()"},{"p":"group2.monopoly.auth.validator","c":"ValidPasswordResetRequestDTO","l":"message()"},{"p":"group2.monopoly.auth.validator","c":"ValidUsername","l":"message()"},{"p":"group2.monopoly.auth.validator","c":"ValidUuid","l":"message()"},{"p":"group2.monopoly.payload","c":"GenericResponse","l":"message(String)","u":"message(java.lang.String)"},{"p":"group2.monopoly","c":"MonopolyApplication","l":"MonopolyApplication()","u":"%3Cinit%3E()"},{"p":"group2.monopoly.game.service.engine","c":"GameEngineService","l":"moveStep(Player)","u":"moveStep(group2.monopoly.game.entity.Player)"},{"p":"group2.monopoly.game.service.engine","c":"IGameEngine","l":"moveStep(Player)","u":"moveStep(group2.monopoly.game.entity.Player)"},{"p":"group2.monopoly.game.controller","c":"GameController","l":"nukeGame(Long, Authentication, Map<String, Integer>)","u":"nukeGame(java.lang.Long,org.springframework.security.core.Authentication,java.util.Map)"},{"p":"group2.monopoly.game.service.engine","c":"GameEngineService","l":"nukeGame(Player, Game)","u":"nukeGame(group2.monopoly.game.entity.Player,group2.monopoly.game.entity.Game)"},{"p":"group2.monopoly.game.service.engine","c":"IGameEngine","l":"nukeGame(Player, Game)","u":"nukeGame(group2.monopoly.game.entity.Player,group2.monopoly.game.entity.Game)"},{"p":"group2.monopoly.mapper","c":"ObjectMapperSingleton","l":"ObjectMapperSingleton()","u":"%3Cinit%3E()"},{"p":"group2.monopoly.auth.validator","c":"PasswordConstraintValidator","l":"PasswordConstraintValidator()","u":"%3Cinit%3E()"},{"p":"group2.monopoly.auth.service","c":"UserService","l":"passwordMatches(User, String)","u":"passwordMatches(group2.monopoly.auth.entity.User,java.lang.String)"},{"p":"group2.monopoly.auth.service","c":"UserService","l":"passwordMatches(UserDetails, String)","u":"passwordMatches(org.springframework.security.core.userdetails.UserDetails,java.lang.String)"},{"p":"group2.monopoly.auth.payload","c":"PasswordResetRequestDTO","l":"PasswordResetRequestDTO()","u":"%3Cinit%3E()"},{"p":"group2.monopoly.auth.validator","c":"PasswordResetRequestDTOValidator","l":"PasswordResetRequestDTOValidator()","u":"%3Cinit%3E()"},{"p":"group2.monopoly.auth.validator","c":"ValidPassword","l":"payload()"},{"p":"group2.monopoly.auth.validator","c":"ValidPasswordResetRequestDTO","l":"payload()"},{"p":"group2.monopoly.auth.validator","c":"ValidUsername","l":"payload()"},{"p":"group2.monopoly.auth.validator","c":"ValidUuid","l":"payload()"},{"p":"group2.monopoly.game.entity","c":"Player","l":"Player()","u":"%3Cinit%3E()"},{"p":"group2.monopoly.auth.controller","c":"AuthController","l":"postUserSettings(UserSettingsChangeDTO, Authentication)","u":"postUserSettings(group2.monopoly.auth.payload.UserSettingsChangeDTO,org.springframework.security.core.Authentication)"},{"p":"group2.monopoly.auth.service","c":"UserService","l":"promoteToUser(JwtAuthenticationToken)","u":"promoteToUser(org.springframework.security.oauth2.server.resource.authentication.JwtAuthenticationToken)"},{"p":"group2.monopoly.auth.service","c":"UserService","l":"promoteToUser(UserDetails)","u":"promoteToUser(org.springframework.security.core.userdetails.UserDetails)"},{"p":"group2.monopoly.game.service.engine","c":"GameEngineService","l":"purchaseStep(Player)","u":"purchaseStep(group2.monopoly.game.entity.Player)"},{"p":"group2.monopoly.game.service.engine","c":"IGameEngine","l":"purchaseStep(Player)","u":"purchaseStep(group2.monopoly.game.entity.Player)"},{"p":"group2.monopoly.game.service.manager","c":"RandomCellSequenceGeneratorService","l":"RandomCellSequenceGeneratorService()","u":"%3Cinit%3E()"},{"p":"group2.monopoly.game.service.engine","c":"RandomDiceGeneratorService","l":"RandomDiceGeneratorService()","u":"%3Cinit%3E()"},{"p":"group2.monopoly.auth.controller","c":"AuthController","l":"registerUser(SignUpDto)","u":"registerUser(group2.monopoly.auth.payload.SignUpDto)"},{"p":"group2.monopoly.auth.controller","c":"AuthController","l":"resetPassword(PasswordResetRequestDTO)","u":"resetPassword(group2.monopoly.auth.payload.PasswordResetRequestDTO)"},{"p":"group2.monopoly.auth.service","c":"UserPasswordResetService","l":"resetPassword(UUID, String)","u":"resetPassword(java.util.UUID,java.lang.String)"},{"p":"group2.monopoly.handlers","c":"RestResponseEntityExceptionHandler","l":"RestResponseEntityExceptionHandler()","u":"%3Cinit%3E()"},{"p":"group2.monopoly.game.service.engine","c":"FileDiceGenerator","l":"roll()"},{"p":"group2.monopoly.game.service.engine","c":"IDiceGenerator","l":"roll()"},{"p":"group2.monopoly.game.service.engine","c":"RandomDiceGeneratorService","l":"roll()"},{"p":"group2.monopoly.game.controller","c":"ScoreboardController","l":"ScoreboardController(ScoreboardService)","u":"%3Cinit%3E(group2.monopoly.game.service.ScoreboardService)"},{"p":"group2.monopoly.game.service","c":"ScoreboardService","l":"ScoreboardService(PlayerRepository)","u":"%3Cinit%3E(group2.monopoly.game.repository.PlayerRepository)"},{"p":"group2.monopoly.security","c":"SecurityConfig","l":"SecurityConfig(CustomUserDetailsService)","u":"%3Cinit%3E(group2.monopoly.security.CustomUserDetailsService)"},{"p":"group2.monopoly.mail","c":"EmailService","l":"sendSimpleMessage(String, String, String)","u":"sendSimpleMessage(java.lang.String,java.lang.String,java.lang.String)"},{"p":"group2.monopoly.mail","c":"EmailServiceImpl","l":"sendSimpleMessage(String, String, String)","u":"sendSimpleMessage(java.lang.String,java.lang.String,java.lang.String)"},{"p":"group2.monopoly.auth.controller","c":"AuthControllerIntegrationTest","l":"Should_200InUser_When_GoodCredentials()"},{"p":"group2.monopoly.auth.controller","c":"AuthControllerIntegrationTest","l":"Should_200Login_When_GoodCredentials()"},{"p":"group2.monopoly.auth.controller","c":"AuthControllerIntegrationTest","l":"Should_200UserSettingsChangePasswordname_When_AuthenticatedUserWithValidRequest()"},{"p":"group2.monopoly.auth.controller","c":"AuthControllerIntegrationTest","l":"Should_200UserSettingsChangeUsername_When_AuthenticatedUserWithValidRequest()"},{"p":"group2.monopoly.auth.controller","c":"AuthControllerIntegrationTest","l":"Should_401Login_When_BadCredentials()"},{"p":"group2.monopoly.auth.controller","c":"AuthControllerIntegrationTest","l":"Should_401User_When_BadToken()"},{"p":"group2.monopoly.auth.controller","c":"AuthControllerIntegrationTest","l":"Should_401User_When_NoToken()"},{"p":"group2.monopoly.auth.controller","c":"AuthControllerIntegrationTest","l":"Should_401UserSettingsChangeUsername_When_AuthenticatedUserWithInvalidRequest()"},{"p":"group2.monopoly.auth.controller","c":"AuthControllerIntegrationTest","l":"Should_Status201_When_RegisteringWithGoodRequest()"},{"p":"group2.monopoly.auth.controller","c":"AuthControllerIntegrationTest","l":"Should_Status400_When_RegisteringWithBadRequest()"},{"p":"group2.monopoly.auth.controller","c":"AuthControllerIntegrationTest","l":"Should_Status400_When_RegisteringWithDuplicateUser()"},{"p":"group2.monopoly.auth.payload","c":"SignUpDto","l":"SignUpDto()","u":"%3Cinit%3E()"},{"p":"group2.monopoly.auth.service","c":"UserService","l":"updateUser(User, UserSettingsChangeDTO)","u":"updateUser(group2.monopoly.auth.entity.User,group2.monopoly.auth.payload.UserSettingsChangeDTO)"},{"p":"group2.monopoly.auth.entity","c":"User","l":"User(String, String, String)","u":"%3Cinit%3E(java.lang.String,java.lang.String,java.lang.String)"},{"p":"group2.monopoly.auth.entity","c":"User","l":"User(String, String, String, Set<String>)","u":"%3Cinit%3E(java.lang.String,java.lang.String,java.lang.String,java.util.Set)"},{"p":"group2.monopoly.auth.validator","c":"UsernameConstraintValidator","l":"UsernameConstraintValidator()","u":"%3Cinit%3E()"},{"p":"group2.monopoly.auth.entity","c":"UserPasswordReset","l":"UserPasswordReset(User, UUID, Date)","u":"%3Cinit%3E(group2.monopoly.auth.entity.User,java.util.UUID,java.util.Date)"},{"p":"group2.monopoly.auth.service","c":"UserPasswordResetService","l":"UserPasswordResetService(UserRepository, UserPasswordResetRepository, EmailService, PasswordEncoder)","u":"%3Cinit%3E(group2.monopoly.auth.repository.UserRepository,group2.monopoly.auth.repository.UserPasswordResetRepository,group2.monopoly.mail.EmailService,org.springframework.security.crypto.password.PasswordEncoder)"},{"p":"group2.monopoly.auth.service","c":"UserService","l":"UserService(UserRepository, PasswordEncoder, CustomUserDetailsService)","u":"%3Cinit%3E(group2.monopoly.auth.repository.UserRepository,org.springframework.security.crypto.password.PasswordEncoder,group2.monopoly.security.CustomUserDetailsService)"},{"p":"group2.monopoly.auth.payload","c":"UserSettingsChangeDTO","l":"UserSettingsChangeDTO()","u":"%3Cinit%3E()"},{"p":"group2.monopoly.auth.validator","c":"UuidValidator","l":"UuidValidator()","u":"%3Cinit%3E()"}];updateSearchResults();